on:
  push:
  workflow_dispatch:
    inputs:
      enable_tmate:
        description: 'Enable tmate debugging'
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        variant: [trad, simp]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup uv
        uses: astral-sh/setup-uv@v5
      - name: Install dependencies
        run: sudo apt-get install -y opencc p7zip-full cmake
      - name: Build variant ${{ matrix.variant }}
        run: |
          uv venv && uv pip install -e .
          cmake -S. -Bbuild -DMORAN_VARIANT=${{ matrix.variant }} && cmake --build build && cmake --install build
      - name: Upload full pack (${{ matrix.variant }})
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.variant == 'trad' && 'Trad' || 'Simp' }}-FullPack"
          path: dist/**
      - name: Upload dicts (${{ matrix.variant }})
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.variant == 'trad' && 'Trad' || 'Simp' }}-DictsOnly"
          path: |
            dist/moran.base.dict.yaml
            dist/moran.tencent.dict.yaml
            dist/moran.moe.dict.yaml
            dist/moran.computer.dict.yaml
            dist/moran.words.dict.yaml
      - name: Deploy to branch ${{ matrix.variant }}
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref }} == "refs/heads/master"
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
          publish_branch: ${{ matrix.variant }}
      - name: Setup tmate session
        if: ${{ github.event.inputs.enable_tmate == 'true' }}
        uses: mxschmitt/action-tmate@v3

  test:
    if: ${{ github.repository == 'rimeinn/rime-moran' }}
    needs: [build]
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        schema: [moran, moran_aux, moran.hint, moran.charset]
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Download full pack (trad)
        uses: actions/download-artifact@v4
        with:
          name: "Trad-FullPack"
      - name: Set up Mira
        run: |
          wget https://github.com/rimeinn/mira/releases/download/latest/mira
          chmod +x mira
      - name: Test ${{ matrix.schema }}
        run: ./mira -C cache tests/${{ matrix.schema }}.test.yaml
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3

  demo:
    if: ${{ github.repository == 'rimeinn/rime-moran' }}
    runs-on: ubuntu-24.04
    needs: [build]
    strategy:
      matrix:
        variant: [trad, simp]
    steps:
      - name: Download full pack (${{ matrix.variant }})
        uses: actions/download-artifact@v4
        with:
          name: "${{ matrix.variant == 'trad' && 'Trad' || 'Simp' }}-FullPack"
      - name: Build demo ${{ matrix.variant }}
        run: |
          sudo apt install -y librime-data librime-bin
          rm -f *.gram
          cat >moran.extended.dict.yaml <<EOF
          ---
          name: moran.extended
          version: "mini"
          sort: by_weight
          use_preset_vocabulary: false
          import_tables: [moran.chars, moran.base, moran.words]
          ...
          EOF

          rime_deployer --build . /usr/share/rime-data ./build
          rm -rf ./*.yaml

      - name: Upload demo ${{ matrix.variant }}
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.variant == 'trad' && 'Trad' || 'Simp' }}-Demo"
          path: |
            build/
            lua/
            opencc/

  dict_qa:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Check if the simplified table contains traditional words by mistake
        run: cd tools && uv run check_simp_table.py
